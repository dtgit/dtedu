<html 
 xmlns="http://www.w3.org/1999/xhtml"
 xml:lang="en"
 lang="en"
 xmlns:tal="http://xml.zope.org/namespaces/tal"
 xmlns:metal="http://xml.zope.org/namespaces/metal"
 xmlns:i18n="http://xml.zope.org/namespaces/i18n"
 i18n:domain="ECQuiz"
 metal:use-macro="here/main_template/macros/master">
 <!-- Bindings for all macros:
 question
 -->
 <body>
  <metal:import-css fill-slot="css_slot">
   <style type="text/css" media="screen" tal:content="string: @import url($portal_url/ecqstyles.css);">
   </style>
  </metal:import-css>
  
  <metal:fill fill-slot="main">
   <metal:block define-macro="edit_view">
    
    <div metal:use-macro="here/document_actions/macros/document_actions">
     Document actions (print, sendto, etc.)
    </div>
   
    <h1 tal:content="here/title_or_id"/>

    <metal:use use-macro="here/ecq_tools/macros/up_one_level">
     Up one level
    </metal:use>
    
    <form name="dummy" action="#" method="#">
     <fieldset>
      <tal:call-view-macro define="
       inputDisabled	python:'yes';
       question		python:here;
       result		python:here.maybeMakeResult();
       object		python:question;
       ">
       <metal:use use-macro="here/ecq_tools/macros/use_default_view"/>
      </tal:call-view-macro>
     </fieldset>
    </form>

    <div metal:use-macro="here/document_byline/macros/byline">
     Get the byline - contains details about author and modification date.
    </div>

   </metal:block>
   
   <tal:hide-view-macro condition="python:False">
    <!-- The following macros are not meant to actually be shown on this page.
    It's just more convenient to define them here than elsewhere. -->
    
    <!-- Bindings for this macro:
    required:
    question
    used if present:
    resultsView
    candidateId
    -->
    <metal:block define-macro="view">
     <tal:comment condition="python:False">
      If 'resultsView' was requested, the candidate's answer will be retrieved.
      Otherwise 'candidateAnswer' will be [].
     </tal:comment>
     
     <tal:define define="
      candidateId      candidateId|python:'';
      resultsView      resultsView|python:False;
      
      editView         python:(not resultsView) and here.userIsGrader(member);
      gradeView        gradeView|python:False;
      
      candidateAnswer  python:((candidateId and [result.getCandidateAnswer(question)]) or [None])[0];
      haveCandidateAnswer python:(candidateId and result.haveCandidateAnswer(question));
      inputDisabled    inputDisabled|python:['', 'yes'][resultsView];
      
      startWatchDummy  python:candidateId and (not resultsView) and result.startWatch(question);
      ecq_tool         nocall:portal/ecq_tool;
      ">
      <!-- Output question text -->
      <metal:defslot-pre-question define-slot="pre_question"/>
      
      <span tal:replace="structure python:question.getQuestion(forceInline=True)">
       The question text.
      </span>
      
      <tal:if_results_view condition="resultsView">
       <metal:block define-slot="results"/>
       (<span i18n:translate="time_spent">Time Spent:</span> 
       <span tal:replace="python:ecq_tool.localizeTimeDelta(result.getTimeSpent(question))"/>)
      </tal:if_results_view>

      <tal:if_edit_view condition="editView">
       <metal:block define-slot="edit_info">
	<metal:block define-slot="additional_edit_info"/>
        <tal:if_manager condition="python:here.userIsManager(member)">
         <span class="editControls">
          <a href="edit" tal:attributes="href string:${question/absolute_url}/edit;"
           i18n:domain="plone" i18n:translate="Edit">Edit</a>
         </span>
        </tal:if_manager>
       </metal:block>
      </tal:if_edit_view>

      <metal:define-slot define-slot="main_slot"/>
      
      <tal:if_grade_view condition="gradeView">
       <metal:define-slot define-slot="grade_input"/>
      </tal:if_grade_view>
     </tal:define>
    </metal:block>
    
   </tal:hide-view-macro>
  </metal:fill>
 </body>
</html>
<!-- Keep this comment at the end of the file
Local variables:
mode:xml
sgml-local-catalogs:("/usr/local/lib/sgml/XHTML11.cat")
sgml-validate-command:"xmllint \\-\\-valid \\-\\-noout %s %s"
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
fill-column:79
End:
-->
